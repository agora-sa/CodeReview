日志体检工具
背景：
    鉴于我们现在给客户review代码的一些场景,其中有很多review的点都是相同的,涉及到很多重复的工作, 而且光看代码有时还看不全, 整个流程的效率也不高。
目标：
    针对上面的疼点，我们可以开发一个自动化的集成代码体检工具,通过分析日志,可以对客户的集成代码进行一个全方位的基础检测, 
    这样能够高效、快速的发现客户集成过程中的一些错误和可以优化和改进的点,总结起来就是：
    1、提升我们日常的工作效率。
    2、基础的review代码的活让每个人都可以干。
    3、使客户的代码不出现明显的集成问题。
    4、工具不断迭代，每一个规则都是一次经验的积累，可以沉淀。

本工具从以下几个模块来进行检测，从而输出检测结果。
基础版：
    1、基础信息检测
        1、检测日志文件的完整性
            条件：是否有加入频道的操作，如果连频道都没进，认为这个日志文件是不完整的。
        2、统计日志文件的总行数
        3、统计日志文件的时间区间
            日志是从 什么时间 -> 什么时间
        4、统计sdk的版本号和build号
        5、统计日志文件设置的通信模式的相关信息
            1、设置过多少次通信模式？
            2、都设置过什么通信模式？
            3、最后一次设置通信模式是在什么时间？设置的是什么？
            4、展示每一次设置的详细信息
        6、采用的编码方式和解码方式是什么？
    2、引擎相关信息检测
        1、引擎一共创建了多少次？
            展示信息
        2、引擎一共销毁了多少次？
            展示信息
        3、是否存在频繁创建和销毁引擎的情况？
            判断标准是：一个文件中创建或销毁的次数大于10次
        4、是否存在创建和销毁引擎次数不匹配的情况？
            如果不匹配，比如 创建的次数>销毁，那么可能有没销毁的情况。
        5、是否存在很短时间连续创建活销毁的情况？
            判断标准是 创建&创建 创建&销毁 销毁&销毁 两次的间隔小于500ms
        6、all模式：输出创建引擎和销毁引擎的详细信息
    3、频道相关信息检测
        1、加入频道和离开频道的次数
        2、加入频道和离开频道的次数是否一致
            如果不一致，那么需要检查join和leave的逻辑
        3、加入频道次数是否等于加入频道成功次数相等
        4、是否存在频繁加入、离开频道的情况
            1、多次频繁加入频道，比如两次加入频道的时间间隔<500ms
            2、多次频繁离开频道，比如两次离开频道的时间间隔<500ms
        5、加入和离开频道的时间间隔是否过小？
            加入和离开频道的时间间隔<500ms
        6、加入和离开频道的详细信息。
        7、最后一次加入频道和成功加入频道的时间和详细信息。